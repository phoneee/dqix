[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dqix"
version = "2.0.0"
description = "Domain Quality Index - Clean Architecture Implementation"
authors = [{name = "DQIX Contributors", email = "contributors@dqix.org"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: Name Service (DNS)",
    "Topic :: Security",
    "Topic :: System :: Networking :: Monitoring",
]
keywords = ["domain", "security", "dns", "tls", "assessment"]

# Core dependencies
dependencies = [
    # CLI and UI
    "typer>=0.12.0",
    "rich>=13.0.0",
    
    # Network and HTTP
    "aiohttp>=3.12.0",
    "dnspython>=2.4.0",
    "httpx>=0.25.0",
    "cryptography>=41.0.0",
    
    # Data handling
    "pydantic>=2.5.0",
]

# Optional dependencies for development
[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.5.0",
    
    # Code quality
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pre-commit>=3.6.0",
    
    # Security
    "bandit>=1.7.5",
    "safety>=3.0.0",
    
    # Documentation
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

# Performance optimizations
speedups = [
    "aiodns>=3.0.0",      # Fast DNS resolution
    "cchardet>=2.1.7",    # Fast character encoding detection
    "brotli>=1.0.9",      # Brotli compression support
]

[project.urls]
Homepage = "https://github.com/your-org/dqix"
Documentation = "https://dqix.readthedocs.io/"
Repository = "https://github.com/your-org/dqix.git"
Issues = "https://github.com/your-org/dqix/issues"

[project.scripts]
dqix = "dqix.__main__:main"

# Tool configurations
[tool.setuptools.packages.find]
where = ["."]
include = ["dqix*"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dqix",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
target-version = "py39"
line-length = 100
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "N",      # pep8-naming
    "S",      # flake8-bandit
    "T20",    # flake8-print
    "SIM",    # flake8-simplify
    "RUF",    # ruff-specific rules
]
ignore = [
    "S101",   # assert used
    "S603",   # subprocess call
    "S607",   # partial executable path
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "T20"]
"examples/*" = ["T20"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "dns.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cryptography.*"
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["dqix"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 